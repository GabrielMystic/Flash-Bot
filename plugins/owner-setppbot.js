función  _0x31ac ( _0x16c31d , _0x391554 ) { const  _0x14c2c6 = _0x14c2 ( ) ; return  _0x31ac = función ( _0x31ac59 , _0x41e1db ) const _0x36e927 = _0x31ac , _0x211e28 = _0x8d3321 ( ) ; mientras que 0x2 + - parseInt ( _0x36e927 ( 0x1b9 ) ) / 0x3 + parseInt { _0x31ac59 = _0x31ac59 - 0x1b1 ; sea  ​​_0x1c6184 = _0x14c2c6 [ _0x31ac59 ] ; devolver  _0x1c6184 ; } , _0x31ac ( _0x16c31d , _0x391554) ; } constante  ( _ __0x34771d = _0x31ac ; ( función ( _0x8d3321 , _0x5019dd ) { ( ! _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _   ( _0x36e927 ( 0x1c3 ) ) / 0x4 * ( - parseint ( _0x336e927 ( 0x1b6 ) / 0x5 ) + - parseint ( _0x336e927 ( 0x1cc ) _ _ / 0x6 *( - parseInt ( _0x36e927 ( 0x1cd ) ) / 0x7 ) + parseInt ( _0x36e927 ( 0x1d0 ) ) / 0x8 * ( parseInt ( _0x36e927 ( 0x1ce ) ) / 0x9 ) + - parseInt ( _0x36e927 ( 0x1d0 ) ) ( _ _ _ _ _ _ _0x36e927 ( 0x1b5 )) / 0xb ) ; si ( _0x500528 === _0x5019dd ) romper _0x14c2 , 0xb4aad; else  _0x211e28 [ 'push' ] ( ) ) ; } } } (_0x211e28 [ 'cambio' ] ( ) ) ; } atrapar ( _0x9b5c64 ) { _0x211e28 [ 'empujar' ] ( _0x211e28 [ 'cambiar' ] () ) ; importar  _0x29cf90  desde 'jimp' ; Let handler = async ( _0x55976e , { conn : _0x14ced5 , usedPrefix : _0x333d1e6 , comando : _0x480711 , args : _0x4bb196 , isowner : _0x5a3d5e , isAdmin : _0x1410d6 , isswner : { 0x1 ) _  _ _ _ _  > _0x3 intente { dejar  _0x2538c6 = _0x14ced5 [ _0x2359c0 ( 0x1c2 ) ] [ _0x2359c0 ( 0x1b2 ) ] , _0xf17176 = _0x55976e [ _0x2359c0 ( 0x1bb ) ] ? _0x55976e [ 'citado' ] : _0x55976e ; si ( ! _0x55976e [ _0x2359c0 ( 0x1bb ) ] ) lanzar '*[❗𝐈𝐍𝐅𝐎❗] \ x20𝙽𝙾 \ x20𝚂𝙴 \ x20𝙴𝙽𝙲𝙾𝙽𝚃𝚁𝙾 \ x20𝙻𝙰 \ x20𝙸𝙼𝙰𝙶𝙴𝙽, \ x20𝙿𝙾𝚁 \ x20𝙵𝙰𝚅𝙾𝚁 \ x20𝚁𝙴𝚂𝙿𝙾𝙽𝙳𝙴 \ x20𝙰 \ x20𝚄𝙽𝙰 \ x20𝙸𝙼𝙰𝙶𝙴𝙽 \ x20𝚄𝚂𝙰𝙽𝙳𝙾 \ x20𝙴𝙻 \ x20𝙲𝙾𝙼𝙰𝙽𝙳𝙾 \ x20' + ((( _0x33d1e6 + _0x480711 ) + '*' ; vamos _0x353a82 = ( _0xf17176 [ _0x2359c0 ( 0x1b1 ) ] || _0xf17176 ) [ _0x2359c0 ( 0x1cf ) ] || '' ; var  _0x434471 = esperar  ( 0x1ba ) ] ( ) ; let _0x3aeaf4 = esperar _0x2538c6 ; función asíncrona ) { const _0x398c4c = _0x2359c0 , _0xf17176 [ _0x2359c0    _0x4d2c5f ( _0x2e4ee1 _0x398c4c ( 0x1be ) ] ( _0x29cf90 [ _0x5e6130 = esperar  _0x29cf90 [ _0x398c4c ( 0x1c9 ) ] ( _0x2e4ee1 ) , _0x1347f7 = _0x5e6130 [ _0x398c4c ( 0x1b7 ) ] _0x5e6130 [ _0x398c4c 4 ) ( ? ) x _ _0x5e6130 [ 'redimensionar' ] ( 0x2d0 , _0x29cf90 [ _0x398c4c ( 0x1c1 ) ] ) : _0x5e6130 [ _ _ _ _0x398c4c ( 0x1c1 ) ] , 0x2d0 ) , _0x17aa09 = await  _0x29cf90 [ _0x398c4c ( 0x1c9 ) ] ( await  _0x1347f7 [ _0x398c4c ( 0x1c5 ) ] ( _0x29cf90 [ _0x398c4c ( 0x1cb ) ] ) ) ; volver { 'img' : esperar  _0x1347f7 [ _0x398c4c ( 0x1c5 ) ] ( _0x29cf90 [ _0x398c4c ( 0x1cb ) ] ) } ; } var  { img : _0x35d6f3 }= esperar  _0x4d2c5f ( _0x434471 ) ; esperar  _0x14ced5 [ _0x2359c0 ( 0x1bc ) ] ( { 'etiqueta' : 'iq' , 'attrs' : { 'a' : _0x3aeaf4 , 'tipo' : 'establecer' , 'xmlns' : _0x2359c0 ( 0x1c6 ) } , 'contenido' : [ { 'etiqueta' : _0x2359c0 ( 0x1c8 ) , ' : { 'tipo ' : _0x2359c0 ( 0x1b3 ) , 'contenido' : _0x35d6f3 } ] } ) , _0x55976e [ _0x2359c0 ( ' ' ' ' ' ( 0x1c7 ) ) ; } atrapar { lanzar _0x2359c0 (  0x1bf ) + ( _0x33d1e6 + _0x480711 ) + '*' ; } } ; manipulador[ 'comando' ] = / ^ setppbot $ / i , manejador [ _0x34771d ( 0x1c0 ) ] = ! ! [ ] ; exportar  controlador predeterminado  ; función _0x14c2 ( ) { const = [ 'AUTO' , 'usuario' , 'w:perfil:imagen' ,  _0x1897E4 'descargar' , 'citado' ,'consulta' , '2810ZHRQDi' ,, '8cjixwu' , 'getheight' , 'getbufferasync' '*[❗𝐈𝐍𝐅𝐎❗] \ x20𝚂𝙴 \ x20𝙲𝙰𝙼𝙱𝙸𝙾 \ x20𝙲𝙾𝙽 \ x20𝙴𝚇𝙸𝚃𝙾 \ x20𝙻𝙰 \ x20𝙵𝙾𝚃𝙾 \ x20𝙳𝙴 \ x20𝙿𝙴𝚁𝙵𝙸𝙻 \ x20𝙳𝙴𝙻 \ x20𝙽𝚄𝙼𝙴𝚁𝙾 \ x20𝙳𝙴𝙻 \ x20𝙱𝙾𝚃*' , 'imagen' ,,, ' , 'leer' , '1419731ZjYevm' , 'MIME_JPEG' , '82272azbcaw' , '350agtQLJ' , '279gQMikZ' , 'mimetype' , '188728rlRvtO' , 'msg' , 'jid' , 'imagen' , '170534FM', '14905ZvBfug' , '2578255zmHnCy' ' 25782555zm, 'responder' , '1780230pdlTpE' , 'RESEZE ' , '*[❗𝐈𝐍𝐅𝐎❗] \ x20𝙽𝙾 \ x20𝚂𝙴 \ x20𝙴𝙽𝙲𝙾𝙽𝚃𝚁𝙾 \ x20𝙻𝙰 \ x20𝙸𝙼𝙰𝙶𝙴𝙽, \ x20𝙿𝙾𝚁 \ x20𝙵𝙰𝚅𝙾𝚁 \ x20𝚁𝙴𝚂𝙿𝙾𝙽𝙳𝙴 \ x20𝙰 \ x20𝚄𝙽𝙰 \ x20𝙸𝙼𝙰𝙶𝙴𝙽 \x20𝚄𝚂𝙰𝙽𝙳𝙾\x20𝙴𝙻\x20𝙲𝙾𝙼𝙰𝙽𝙳𝙾\x20' , 'rpropietario' ] ; _0x14c2 = función ( ) { devuelve  _0x1897e4 ; } ; devolver  _0x14c2 ( ) ; }

/*let handler = async (m, { conn, usedPrefix, command }) => {
let bot = conn.user.jid
let q = m.quoted ? m.quoted : m
let mime = (q.msg || q).mimetype || ''
if (/image/.test(mime)) {
let img = await q.download()
if (!img) throw `*[❗𝐈𝐍𝐅𝐎❗] 𝙽𝙾 𝚂𝙴 𝙴𝙽𝙲𝙾𝙽𝚃𝚁𝙾 𝙻𝙰 𝙸𝙼𝙰𝙶𝙴𝙽, 𝙿𝙾𝚁 𝙵𝙰𝚅𝙾𝚁 𝚁𝙴𝚂𝙿𝙾𝙽𝙳𝙴 𝙰 𝚄𝙽𝙰 𝙸𝙼𝙰𝙶𝙴𝙽 𝚄𝚂𝙰𝙽𝙳𝙾 𝙴𝙻 𝙲𝙾𝙼𝙰𝙽𝙳𝙾 ${usedPrefix + command}*`
await conn.updateProfilePicture(bot, img)
conn.reply(m.chat, '*[❗𝐈𝐍𝐅𝐎❗] 𝚂𝙴 𝙲𝙰𝙼𝙱𝙸𝙾 𝙲𝙾𝙽 𝙴𝚇𝙸𝚃𝙾 𝙻𝙰 𝙵𝙾𝚃𝙾 𝙳𝙴 𝙿𝙴𝚁𝙵𝙸𝙻 𝙳𝙴𝙻 𝙽𝚄𝙼𝙴𝚁𝙾 𝙳𝙴𝙻 𝙱𝙾𝚃*', m)
} else throw `*[❗𝐈𝐍𝐅𝐎❗] 𝙽𝙾 𝚂𝙴 𝙴𝙽𝙲𝙾𝙽𝚃𝚁𝙾 𝙻𝙰 𝙸𝙼𝙰𝙶𝙴𝙽, 𝙿𝙾𝚁 𝙵𝙰𝚅𝙾𝚁 𝚁𝙴𝚂𝙿𝙾𝙽𝙳𝙴 𝙰 𝚄𝙽𝙰 𝙸𝙼𝙰𝙶𝙴𝙽 𝚄𝚂𝙰𝙽𝙳𝙾 𝙴𝙻 𝙲𝙾𝙼𝙰𝙽𝙳𝙾 ${usedPrefix + command}*`}
handler.command = /^setppbot$/i
handler.rowner = true
export default handler*/
